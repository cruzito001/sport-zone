---
import Layout from '../layouts/Layout.astro';
import { rankingData } from '../data/rankingData';

const { mejoresEquipos, goleadores } = rankingData;
---

<Layout title="Ranking - SportZone">
  <main class="ranking-container">
    <h1>Ranking de Torneos</h1>
    
    <section class="mejores-equipos">
      <h2>Mejores Equipos por Torneo</h2>
      <div class="torneos-grid">
        {mejoresEquipos.map((torneo) => (
          <div class="torneo-card">
            <div class="card-header">
              <div class="modal-buttons">
                <span class="modal-button red"></span>
                <span class="modal-button yellow"></span>
                <span class="modal-button green"></span>
              </div>
              <h3>{torneo.nombre}</h3>
            </div>
            <div class="card-content">
              {torneo.top3.map((equipo) => (
                <div class={`equipo-row place-${equipo.posicion}`}>
                  <span class="posicion">{equipo.posicion}</span>
                  <span class="equipo">{equipo.equipo}</span>
                  <span class="puntos">{equipo.puntos} pts</span>
                </div>
              ))}
            </div>
          </div>
        ))}
      </div>
    </section>

    <section class="tabla-goleadores">
      <h2>Top 10 Goleadores</h2>
      <div class="tabla-container">
        <table>
          <thead>
            <tr>
              <th>Pos</th>
              <th>Jugador</th>
              <th>Equipo</th>
              <th>Goles</th>
            </tr>
          </thead>
          <tbody>
            {goleadores.map((jugador) => (
              <tr class={`goleador-row place-${jugador.posicion}`}>
                <td>{jugador.posicion}</td>
                <td>{jugador.nombre}</td>
                <td>{jugador.equipo}</td>
                <td>{jugador.goles}</td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </section>
  </main>
</Layout>

<style>
  .ranking-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem 1rem;
  }

  h1, h2 {
    text-align: center;
    color: #333;
  }

  h1 {
    font-size: 2.5rem;
    margin-bottom: 2rem;
  }

  h2 {
    font-size: 2rem;
    margin-bottom: 1.5rem;
  }

  .torneos-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
    margin-bottom: 3rem;
  }

  .torneo-card {
    background-color: white;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .torneo-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
  }

  .card-header {
    background-color: #f0f0f0;
    padding: 12px 15px;
    display: flex;
    align-items: center;
    border-bottom: 1px solid #e0e0e0;
  }

  .modal-buttons {
    display: flex;
    gap: 8px;
    margin-right: 15px;
  }

  .modal-button {
    width: 12px;
    height: 12px;
    border-radius: 50%;
  }

  .modal-button.red { background-color: #ff5f56; }
  .modal-button.yellow { background-color: #ffbd2e; }
  .modal-button.green { background-color: #27c93f; }

  .card-header h3 {
    margin: 0;
    font-size: 1.2rem;
    color: #333;
  }

  .card-content {
    padding: 1rem;
  }

  .equipo-row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.5rem 0;
    border-bottom: 1px solid #eee;
  }

  .equipo-row:last-child {
    border-bottom: none;
  }

  .posicion {
    font-weight: bold;
    font-size: 1.2rem;
    width: 30px;
  }

  .equipo {
    flex-grow: 1;
    text-align: left;
  }

  .puntos {
    font-weight: bold;
  }

  .place-1 {
    color: #ffd700;
    font-weight: bold;
  }

  .place-2 {
    color: #c0c0c0;
    font-weight: bold;
  }

  .place-3 {
    color: #cd7f32;
    font-weight: bold;
  }

  .tabla-container {
    overflow-x: auto;
  }

  table {
    width: 100%;
    border-collapse: separate;
    border-spacing: 0;
    background-color: white;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  th, td {
    padding: 1rem;
    text-align: left;
    border-bottom: 1px solid #eee;
  }

  th {
    background-color: #f0f0f0;
    font-weight: bold;
    color: #333;
    text-transform: uppercase;
    font-size: 0.9rem;
  }

  tr:last-child td {
    border-bottom: none;
  }

  .goleador-row {
    transition: background-color 0.3s ease;
  }

  .goleador-row:hover {
    background-color: #f8f8f8;
  }

  .goleador-row.place-1 {
    background-color: rgba(255, 215, 0, 0.1);
  }

  .goleador-row.place-2 {
    background-color: rgba(192, 192, 192, 0.1);
  }

  .goleador-row.place-3 {
    background-color: rgba(205, 127, 50, 0.1);
  }

  @media (max-width: 768px) {
    .torneos-grid {
      grid-template-columns: 1fr;
    }

    th, td {
      padding: 0.75rem;
    }
  }

  @keyframes shine {
    0% {
      background-position: -100px;
    }
    40%, 100% {
      background-position: 140px;
    }
  }

  .place-1 .posicion,
  .place-1 td:first-child {
    background: linear-gradient(to right, #ffd700 0%, #fff6a8 10%, #ffd700 20%);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: shine 3s infinite linear;
    background-size: 200px 100%;
    background-repeat: no-repeat;
    font-weight: bold;
  }
</style>

<script>
  const animateTopPlaces = () => {
    const topPlaces = document.querySelectorAll('.place-1, .place-2, .place-3');
    topPlaces.forEach((element) => {
      element.addEventListener('mouseover', () => {
        (element as HTMLElement).style.transform = 'scale(1.05)';
        (element as HTMLElement).style.transition = 'transform 0.3s ease';
      });
      element.addEventListener('mouseout', () => {
        (element as HTMLElement).style.transform = 'scale(1)';
      });
    });
  };

  document.addEventListener('DOMContentLoaded', () => {
    animateTopPlaces();
  });
</script>

